{
  "workbench.startupEditor": "newUntitledFile",
  "workbench.colorTheme": "Min Dark",
  "workbench.iconTheme": "symbols",
  // "editor.mouseWheelScrollSensitivity": 3,

  "workbench.editor.labelFormat": "default",
  // "editor.fontFamily": "Fira Code",
  "editor.fontFamily": "JetBrains Mono",
  "editor.fontLigatures": true,
  "terminal.integrated.fontSize": 14,
  "editor.fontSize": 14,
  "editor.lineHeight": 1.8,
  "editor.rulers": [100, 120],
  "files.autoSave": "afterDelay",
  "editor.guides.bracketPairs": true,
  "editor.tabSize": 2,
  "editor.formatOnType": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnSaveMode": "file",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "editor.renderLineHighlight": "gutter",
  "editor.suggestSelection": "first",
  "editor.hideCursorInOverviewRuler": true,
  "explorer.fileNesting.enabled": true,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "symbols.hidesExplorerArrows": false,
  "window.commandCenter": false,
  "editor.mouseWheelZoom": true,
  "update.mode": "manual",
  "editor.minimap.enabled": false,
  // "chat.editing.alwaysSaveWithGeneratedChanges": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "security.workspace.trust.untrustedFiles": "open",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "liveServer.settings.donotShowInfoMsg": true,
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "tailwindCSS.classAttributes": ["class", "ui"],
  "tailwindCSS.experimental.classRegex": [
    ["ui:\\s*{([^)]*)\\s*}", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ],
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, tsconfig.json",
    ".prettierrc": ".prettierignore, .prettierrc.json",
    "Dockerfile": "docker-compose.yml"
  },
  "[prisma]": {
    "editor.formatOnSave": true
  },
  "files.associations": {
    ".env.*": "dotenv",
    ".prettierrc": "json",
    "*.css": "css",
    ".dev.vars": "dotenv"
  },
  "symbols.files.associations": {
    "*.module.ts": "nest",
    "*.controller.ts": "nest-controller",
    "*.service.ts": "nest-service",
    "*.guard.ts": "typescript",
    "*.spec.ts": "ts-test",
    "*.e2e-spec.ts": "ts-test",
    "*.mock.ts": "ts-test",
    "vitest.config.e2e.ts": "vite",
    ".env.development.local": "gear",
    ".env.test.local": "gear",
    ".env.local": "gear",
    ".env.example": "gear",
    "*.routes.ts": "ts-types",
    "routes.ts": "ts-types"
  },
  "symbols.folders.associations": {
    "entities": "folder-models",
    "model": "folder-models",
    "composables": "folder-drizzle",
    "component": "folder-green-code",
    "_components": "folder-green-code",
    "providers": "folder-providers",
    "repositories": "folder-database",
    "repository": "folder-database",
    "stores": "folder-database",
    "views": "folder-orange-code",
    "controllers": "folder-sky-code",
    "routes": "folder-router",
    "pages": "folder-app",
    "test": "folder-utils",
    "tests": "folder-utils",
    "functions": "folder-pink-code"
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "github.copilot.enable": {
    "*": true,
    "markdown": true,
    "scminput": false,
    "plaintext": true
  },
  "github.copilot.chat.followUps": "always",
  "github.copilot.chat.localeOverride": "pt-br",
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.editor.temporalContext.enabled": true
}
